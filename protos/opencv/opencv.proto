// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

message ImageProto
{
	// data depth
	enum Depth
	{
		UCHAR_8 = 0;
		INT_16 = 1;
		UINT_16 = 2;
		INT_32 = 3;
		FLOAT_32 = 4;
		DOUBLE_64 = 5;
	};

	// info of the image
	int32 width = 1;
	int32 height = 2;
	int32 channels = 3;
	Depth depth = 4;

	// image data stored in bytes or float
	repeated bytes data_bytes = 5;
}

package helloopencv;

// The greeting service definition.
service Greeter {
  // Sends a greeting
  rpc SayOpencv (OpencvRequest) returns (OpencvReply) {}
}

// The request message containing the user's name.
message OpencvRequest {
  string name = 1;
  repeated ImageProto images = 2;
}

// The response message containing the greetings
message OpencvReply {
  string message = 1;
  ImageProto images = 2;
}
